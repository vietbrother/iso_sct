///*
// * To change this license header, choose License Headers in Project Properties.
// * To change this template file, choose Tools | Templates
// * and open the template in the editor.
// */
//package com.iso.dashboard.component;
//
//import com.iso.dashboard.utils.BundleUtils;
//import com.iso.dashboard.utils.Constants;
//import com.iso.dashboard.utils.DataUtil;
//import com.iso.dashboard.utils.ISOIcons;
//import com.vaadin.annotations.AutoGenerated;
//import com.vaadin.data.util.IndexedContainer;
//import com.vaadin.ui.Alignment;
//import com.vaadin.ui.Button;
//import com.vaadin.ui.CheckBox;
//import com.vaadin.ui.CustomComponent;
//import com.vaadin.ui.GridLayout;
//import com.vaadin.ui.HorizontalLayout;
//import com.vaadin.ui.Label;
//import com.vaadin.ui.VerticalLayout;
//import java.util.ArrayList;
//import java.util.Arrays;
//import java.util.List;
//
//public class CommonTablePagingFilterPanel extends CustomComponent {
//
//    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
//    @AutoGenerated
//    private VerticalLayout mainLayout;
//    @AutoGenerated
//    private VerticalLayout verTBLListGoodInfomation;
//    //    toolbar table
//    private HorizontalLayout toolbar;
//    @AutoGenerated
//    private CustomPageTableFilterPaging<IndexedContainer> mainTable;
//    @AutoGenerated
//    private GridLayout gridTBLInfomation;
//    @AutoGenerated
//    private Label txtTotalWeightService;
//    @AutoGenerated
//    private Label lbTotalWeight;
//
//    Button addButton;
//    Button coppyButton;
//    Button deleteButton;
//    Button editButton;
//    Button importButton;
//    Button exportButton;
//    Button configButton;
//    Button delContraintButton;
//
//    HorizontalLayout horizoltalLayout;
//    Button btnAdd;
//    Button btnSave;
//    Button btnDelelete;
//
//    CheckBox ckbCheckAll;
//
//    List<String> listIgnoreDescription = new ArrayList<>();
//
//    public void addIgnoreDescription(String properties) {
//        if (!DataUtil.isNullOrEmpty(properties)) {
//            String[] arr = properties.split(",");
//            List lst = Arrays.asList(arr);
//            listIgnoreDescription.addAll(lst);
//        }
//    }
//
//    public List<String> getListIgnoreDescription() {
//        return listIgnoreDescription;
//    }
//
//    public void setListIgnoreDescription(List<String> listIgnoreDescription) {
//        this.listIgnoreDescription = listIgnoreDescription;
//    }
//
//    /**
//     * The constructor should first build the main layout, set the composition
//     * root and then do any custom initialization.
//     *
//     * The constructor will not be automatically regenerated by the visual
//     * editor.
//     */
//    public CommonTablePagingFilterPanel() {
//        buildMainLayout();
//        setCompositionRoot(mainLayout);
//
//        // TODO add user code here
//    }
//
//    public VerticalLayout getMainLayout() {
//        return mainLayout;
//    }
//
//    @AutoGenerated
//    private VerticalLayout buildMainLayout() {
//        // common part: create layout
//        mainLayout = new VerticalLayout();
//        mainLayout.setImmediate(false);
//        mainLayout.setWidth("100%");
//        mainLayout.setHeight(Constants.STYLE_CONF.AUTO_VALUE);
//        mainLayout.setMargin(false);
//
//        // top-level component properties
//        setWidth("100.0%");
//        setHeight(Constants.STYLE_CONF.AUTO_VALUE);
//
//        // verTBLListGoodInfomation
//        verTBLListGoodInfomation = buildVerTBLListGoodInfomation();
//        mainLayout.addComponent(verTBLListGoodInfomation);
//
//        return mainLayout;
//    }
//
//    @AutoGenerated
//    private VerticalLayout buildVerTBLListGoodInfomation() {
//        // common part: create layout
//        verTBLListGoodInfomation = new VerticalLayout();
//        verTBLListGoodInfomation.setStyleName(Constants.STYLE_CONF.CUSTOM_FEILDSET);
//        verTBLListGoodInfomation.setImmediate(false);
//        verTBLListGoodInfomation.setWidth("100.0%");
//        verTBLListGoodInfomation.setHeight(Constants.STYLE_CONF.AUTO_VALUE);
//        verTBLListGoodInfomation.setMargin(true);
//
//        // gridTBLInfomation
//        gridTBLInfomation = buildGridTBLInfomation();
//        verTBLListGoodInfomation.addComponent(gridTBLInfomation);
////      toolbar
//        toolbar = builHorizontalToolBar();
//        verTBLListGoodInfomation.addComponent(toolbar);
////        verTBLListGoodInfomation.setComponentAlignment(toolbar, Alignment.TOP_RIGHT);
//        verTBLListGoodInfomation.setComponentAlignment(toolbar, Alignment.TOP_LEFT);
//
//        // mainTable
//        mainTable = new CustomPageTableFilterPaging<>();
//        mainTable.setImmediate(false);
//        mainTable.setWidth("100.0%");
//        mainTable.setHeight(Constants.STYLE_CONF.AUTO_VALUE);
//        verTBLListGoodInfomation.addComponent(mainTable);
//
//        horizoltalLayout = new HorizontalLayout();
//        horizoltalLayout.setWidth(Constants.STYLE_CONF.AUTO_VALUE);
//        btnAdd = new Button(BundleUtils.getString("common.button.add"));
//        btnSave = new Button(BundleUtils.getString("common.button.save"));
//        btnDelelete = new Button(BundleUtils.getString("common.button.delete"));
//        btnAdd.setVisible(false);
//        btnSave.setVisible(false);
//        btnDelelete.setVisible(false);
//        horizoltalLayout.setVisible(false);
//        horizoltalLayout.addComponent(btnAdd);
//        horizoltalLayout.addComponent(btnSave);
//        horizoltalLayout.addComponent(btnDelelete);
//        verTBLListGoodInfomation.addComponent(horizoltalLayout);
//
//        return verTBLListGoodInfomation;
//    }
//
//    @AutoGenerated
//    private GridLayout buildGridTBLInfomation() {
//        // common part: create layout
//        gridTBLInfomation = new GridLayout();
//        gridTBLInfomation.setImmediate(true);
//        gridTBLInfomation.setWidth("100.0%");
//        gridTBLInfomation.setHeight(Constants.STYLE_CONF.AUTO_VALUE);
//        gridTBLInfomation.setMargin(false);
//        gridTBLInfomation.setVisible(false);
//        gridTBLInfomation.setColumns(8);
//        gridTBLInfomation.setRows(1);
//        // lbTotalWeight
//        lbTotalWeight = new Label();
//        lbTotalWeight.setImmediate(false);
//        lbTotalWeight.setWidth(Constants.STYLE_CONF.AUTO_VALUE);
//        lbTotalWeight.setHeight(Constants.STYLE_CONF.AUTO_VALUE);
//        lbTotalWeight.setValue("Tổng trọng lượng");
//        lbTotalWeight.setVisible(false);
//        gridTBLInfomation.addComponent(lbTotalWeight, 5, 0);
//
//        // txtTotalWeightService
//        txtTotalWeightService = new Label();
//        txtTotalWeightService.setImmediate(false);
//        txtTotalWeightService.setWidth(Constants.STYLE_CONF.AUTO_VALUE);
//        txtTotalWeightService.setHeight(Constants.STYLE_CONF.AUTO_VALUE);
//        txtTotalWeightService.setValue(Constants.EMPTY_CHARACTER);
//        txtTotalWeightService.setVisible(false);
//        gridTBLInfomation.addComponent(txtTotalWeightService, 6, 0);
//        return gridTBLInfomation;
//    }
//
//    private HorizontalLayout builHorizontalToolBar() {
//        toolbar = new HorizontalLayout();
//        toolbar.setImmediate(true);
//        toolbar.setMargin(false);
//        toolbar.setWidth(Constants.STYLE_CONF.AUTO_VALUE);
//        toolbar.setHeight("30px");
//        toolbar.setSpacing(true);
//        toolbar.setVisible(true);
//        toolbar.addStyleName("v-spacing-toolbar");
//        importButton = new Button();
//        importButton.setImmediate(true);
//        importButton.setIcon(ISOIcons.IMPORT);
//        importButton.setWidth(Constants.STYLE_CONF.AUTO_VALUE);
//        importButton.setHeight(Constants.STYLE_CONF.AUTO_VALUE);
//        importButton.setStyleName(Constants.STYLE_CONF.BUTTON_LINK_LARGE);
//        importButton.setVisible(false);
//        importButton.setDisableOnClick(true);
//        importButton.setDescription(BundleUtils.getString("common.button.importFile"));
//        toolbar.addComponent(importButton);
//        //Button export
//        exportButton = new Button();
//        exportButton.setImmediate(true);
//        exportButton.setIcon(ISOIcons.EXPORT);
//        exportButton.setWidth(Constants.STYLE_CONF.AUTO_VALUE);
//        exportButton.setHeight(Constants.STYLE_CONF.AUTO_VALUE);
//        exportButton.setStyleName(Constants.STYLE_CONF.BUTTON_LINK_LARGE);
////        exportButton.setVisible(false);
////        exportButton.setDisableOnClick(true);
//        exportButton.setDescription(BundleUtils.getString("common.button.exportFile"));
//        toolbar.addComponent(exportButton);
//
//        configButton = new Button(ISOIcons.CONFIG);
//        configButton.setWidth(Constants.STYLE_CONF.AUTO_VALUE);
//        configButton.setHeight(Constants.STYLE_CONF.AUTO_VALUE);
//        configButton.setStyleName(Constants.STYLE_CONF.BUTTON_LINK_LARGE);
//        configButton.setVisible(false);
//        configButton.setDescription(BundleUtils.getString("common.button.config"));
//        toolbar.addComponent(configButton);
//
//        //        button add;
//        addButton = new Button();
//        addButton.setIcon(ISOIcons.ADD);
//        addButton.setWidth(Constants.STYLE_CONF.AUTO_VALUE);
//        addButton.setHeight(Constants.STYLE_CONF.AUTO_VALUE);
//        addButton.setStyleName(Constants.STYLE_CONF.BUTTON_LINK_LARGE);
////        addButton.setDisableOnClick(true);
//        addButton.setDescription(BundleUtils.getString("common.button.add"));
//        toolbar.addComponent(addButton);
//
//        coppyButton = new Button();
////        coppyButton.setIcon(ISOIcons.COPY);
//        coppyButton.setIcon(ISOIcons.DUBLICATE);
//        coppyButton.setWidth(Constants.STYLE_CONF.AUTO_VALUE);
//        coppyButton.setHeight(Constants.STYLE_CONF.AUTO_VALUE);
//        coppyButton.setStyleName(Constants.STYLE_CONF.BUTTON_LINK_LARGE);
//        coppyButton.setDisableOnClick(true);
//        coppyButton.setDescription(BundleUtils.getString("common.button.copy"));
//        toolbar.addComponent(coppyButton);
//
//        editButton = new Button();
////        editButton.setIcon(ISOIcons.EDIT);
//        editButton.setIcon(ISOIcons.EDIT);
//        editButton.setWidth(Constants.STYLE_CONF.AUTO_VALUE);
//        editButton.setHeight(Constants.STYLE_CONF.AUTO_VALUE);
//        editButton.setStyleName(Constants.STYLE_CONF.BUTTON_LINK_LARGE);
//        editButton.setDisableOnClick(true);
//        editButton.setDescription(BundleUtils.getString("common.button.edit"));
//        toolbar.addComponent(editButton);
//
//        //Hungkv del contraint
//        delContraintButton = new Button();
//        delContraintButton.setIcon(ISOIcons.DELETE);
//        delContraintButton.setWidth(Constants.STYLE_CONF.AUTO_VALUE);
//        delContraintButton.setHeight(Constants.STYLE_CONF.AUTO_VALUE);
//        delContraintButton.setStyleName(Constants.STYLE_CONF.BUTTON_LINK_LARGE);
//        delContraintButton.setVisible(false);
//        delContraintButton.setDescription(BundleUtils.getString("common.button.delete"));
//        toolbar.addComponent(delContraintButton);
//
//        deleteButton = new Button();
////        deleteButton.setIcon(ISOIcons.DELETE);
//        deleteButton.setIcon(ISOIcons.DELETE);
//        deleteButton.setWidth(Constants.STYLE_CONF.AUTO_VALUE);
//        deleteButton.setHeight(Constants.STYLE_CONF.AUTO_VALUE);
//        deleteButton.setStyleName(Constants.STYLE_CONF.BUTTON_LINK_LARGE);
//        deleteButton.setDisableOnClick(true);
//        deleteButton.setDescription(BundleUtils.getString("common.button.delete"));
//        toolbar.addComponent(deleteButton);
//
//        //anhmv6_start
//        ckbCheckAll = new CheckBox(BundleUtils.getString("common.selectAll"));
//        ckbCheckAll.setDescription(BundleUtils.getString("common.selectAll"));
//        ckbCheckAll.addStyleName("v-margin-left-3px");
//        toolbar.addComponent(ckbCheckAll);
//        toolbar.setComponentAlignment(ckbCheckAll, Alignment.TOP_LEFT);
//        //anhmv6_end
//        return toolbar;
//    }
//
//    public void setMainLayout(VerticalLayout mainLayout) {
//        this.mainLayout = mainLayout;
//    }
//
//    public VerticalLayout getVerTBLListGoodInfomation() {
//        return verTBLListGoodInfomation;
//    }
//
//    public void setVerTBLListGoodInfomation(VerticalLayout verTBLListGoodInfomation) {
//        this.verTBLListGoodInfomation = verTBLListGoodInfomation;
//    }
//
//    public GridLayout getGridTBLInfomation() {
//        return gridTBLInfomation;
//    }
//
//    public void setGridTBLInfomation(GridLayout gridTBLInfomation) {
//        this.gridTBLInfomation = gridTBLInfomation;
//    }
//
//    public Label getTxtTotalWeightService() {
//        return txtTotalWeightService;
//    }
//
//    public void setTxtTotalWeightService(Label txtTotalWeightService) {
//        this.txtTotalWeightService = txtTotalWeightService;
//    }
//
//    public Label getLbTotalWeight() {
//        return lbTotalWeight;
//    }
//
//    public void setLbTotalWeight(Label lbTotalWeight) {
//        this.lbTotalWeight = lbTotalWeight;
//    }
//
//    public HorizontalLayout getHorizoltalLayout() {
//        return horizoltalLayout;
//    }
//
//    public void setHorizoltalLayout(HorizontalLayout horizoltalLayout) {
//        this.horizoltalLayout = horizoltalLayout;
//    }
//
//    public Button getBtnAdd() {
//        return btnAdd;
//    }
//
//    public void setBtnAdd(Button btnAdd) {
//        this.btnAdd = btnAdd;
//    }
//
//    public Button getBtnSave() {
//        return btnSave;
//    }
//
//    public void setBtnSave(Button btnSave) {
//        this.btnSave = btnSave;
//    }
//
//    public Button getBtnDelelete() {
//        return btnDelelete;
//    }
//
//    public void setBtnDelelete(Button btnDelelete) {
//        this.btnDelelete = btnDelelete;
//    }
//
//    public CustomPageTableFilterPaging<IndexedContainer> getMainTable() {
//        return mainTable;
//    }
//
//    public void setMainTable(CustomPageTableFilterPaging<IndexedContainer> mainTable) {
//        this.mainTable = mainTable;
//    }
//
//    public HorizontalLayout getToolbar() {
//        return toolbar;
//    }
//
//    public void setToolbar(HorizontalLayout toolbar) {
//        this.toolbar = toolbar;
//    }
//
//    public Button getAddButton() {
//        return addButton;
//    }
//
//    public void setAddButton(Button addButton) {
//        this.addButton = addButton;
//    }
//
//    public Button getCoppyButton() {
//        return coppyButton;
//    }
//
//    public void setCoppyButton(Button coppyButton) {
//        this.coppyButton = coppyButton;
//    }
//
//    public Button getDeleteButton() {
//        return deleteButton;
//    }
//
//    public void setDeleteButton(Button deleteButton) {
//        this.deleteButton = deleteButton;
//    }
//
//    public Button getEditButton() {
//        return editButton;
//    }
//
//    public void setEditButton(Button editButton) {
//        this.editButton = editButton;
//    }
//
//    public Button getImportButton() {
//        return importButton;
//    }
//
//    public void setImportButton(Button importButton) {
//        this.importButton = importButton;
//    }
//
//    public Button getExportButton() {
//        return exportButton;
//    }
//
//    public void setExportButton(Button exportButton) {
//        this.exportButton = exportButton;
//    }
//
//    public Button getConfigButton() {
//        return configButton;
//    }
//
//    public void setConfigButton(Button configButton) {
//        this.configButton = configButton;
//    }
//
//    public Button getDelContraintButton() {
//        return delContraintButton;
//    }
//
//    public void setDelContraintButton(Button delContraintButton) {
//        this.delContraintButton = delContraintButton;
//    }
//
//    public CheckBox getCkbCheckAll() {
//        return ckbCheckAll;
//    }
//
//    public void setCkbCheckAll(CheckBox ckbCheckAll) {
//        this.ckbCheckAll = ckbCheckAll;
//    }
//
//    public void setInvisibleToolbar(){
//       importButton.setVisible(false);
//        exportButton.setVisible(false);
//        configButton.setVisible(false);
//        addButton.setVisible(false);
//        coppyButton.setVisible(false);
//        editButton.setVisible(false);
//        deleteButton.setVisible(false);
//        delContraintButton.setVisible(false);
//        ckbCheckAll.setValue(false);
//        ckbCheckAll.setVisible(false);
//
//    }
//    
//}
